@model CreativaSL.Web.Ganados.Models.CatBancoModels

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section css
{
    <!--FILEINPUT-->
    <link href="@Url.Content("~/Content/js/plugins/uploadFiles/fileinput.css")" rel="stylesheet" />
    <link href="~/Content/js/plugins/font-awesome.min.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/js/plugins/uploadFiles/theme.css")" rel="stylesheet" />
}

@section featured{
    @{
        var message = TempData["message"] ?? string.Empty;
        var typemessage = TempData["typemessage"] ?? string.Empty;
    }
    <div class="row">
        <div id="Error" class="progress-bar progress-bar-striped active errorCSL" style="display:none; width:100%">
            <h3></h3>
        </div>
        <div id="Success" class="progress-bar progress-bar-striped active successCSL" style="display:none; width:100%">
            <h3></h3>
        </div>
        <div class="col-md-12">
            @{ Html.EnableClientValidation(false); }
            @using (Html.BeginForm("Edit", "CatBanco", FormMethod.Post, new { @class = "form-horizontal", id = "form-dg", autocomplete = "off", @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.ValidationSummary(false, "Hay errores en la captura de información:", new { @class = "text-danger" }) //Server
                <div id="validation_summary" class="field_error "></div> //JS

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title"><strong>Editar</strong> Banco</h3>
                    </div>
                    <ul class="panel-controls">
                        @*<li><a href="#" class="panel-remove exsa"><span class="fa fa-times"></span></a></li>*@
                    </ul>
                    <div class="panel-body">
                        <div class="form-group">
                            <label class="col-md-2 col-xs-12 control-label"><span>* </span> Nombre banco</label>
                            <div class="col-md-6 col-xs-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="fa fa-pencil"></span></span>
                                    @Html.TextBoxFor(model => model.Descripcion, new { id = "Descripcion", @class = "form-control", placeholder = "Ingrese el nombre del banco" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Descripcion)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 col-xs-12 control-label"><span>* </span> Ingrese la imagen del banco</label>
                            <div class="col-md-6 col-xs-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="fa fa-pencil"></span></span>
                                    @Html.TextBoxFor(model => model.ImagenEdt, new { id = "Imagen", @type = "file", @class = "form-control" })
                                </div>
                                @*@Html.ValidationMessageFor(model => model.Imagen)*@
                                <span class="help-block">Ingrese por lo menos 1 imagen.</span>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="panel-footer">
                    <a href="@Url.Action("Index","CatBanco")" class="btn btn-danger"><i class="icon-prev"></i>Cancelar</a>
                    <button form="form-dg" class="btn btn-primary pull-right">Guardar <span class="fa fa-floppy-o fa-right"></span></button>
                </div>
            }
        </div>
    </div>
    <script>
        var message = '@message';
        var typemessage = '@typemessage';
    </script>
}
@section script{
    <script type="text/javascript" src="@Url.Content("~/Content/js/plugins/uploadFiles/fileinput.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/plugins/uploadFiles/es.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/plugins/uploadFiles/explorer-fa/theme.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/mensajeDeError.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/plugins/bootstrap/bootstrap-file-input.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/plugins/jquery-validation/jquery.validate.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/validaciones/additionals.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/Bancos.js")"></script>

    <script>
        jQuery(document).ready(function () {
            Mensaje(message, typemessage);
            Bancos.init();
        });

        $('#Imagen').fileinput({
            theme: 'fa',
            language: 'es',
            maxFileCount: 1,
            overwriteInitial: true,
            showUploadedThumbs: false,
            initialPreview: [
                '<img class="file-preview-image" style="width: auto; height: auto; max-width: 100%; max-height: 100%;" src="data:image/png;base64, @Model.Imagen" />'
            ],
            initialPreviewConfig: [
               { caption: 'Banco'}
            ],
            initialPreviewShowDelete: false,
            showRemove: false,
            showClose: false,
            showUpload: false,
            layoutTemplates: { actionDelete: '' },

            allowedFileExtensions: ['png', 'gif', 'jpg', 'bmp', 'heic'],
            previewFileIcon: '<i class="fa fa-file"></i>',
            preferIconicPreview: true, // this will force thumbnails to display icons for following file extensions
            previewFileIconSettings: { // configure your icon file extensions
                'heic': '<i class="fa fa-file-text text-primary"></i>'
            },
            previewFileExtSettings: { // configure the logic for determining icon file extensions
                'heic': function (ext) {
                    return ext.match(/(heic)$/i);
                }
            }
        })

    </script>
}

