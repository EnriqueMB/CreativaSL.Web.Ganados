using Newtonsoft.Json;
using System;
using System.Collections;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.Script.Serialization;
using System.Web.Mvc;
using System.Collections.Generic;
using System.Drawing;
using System.Diagnostics.CodeAnalysis;

namespace CreativaSL.Web.Ganados.Models
{
    public static class Auxiliar
    {
        public static string ToJSON(this object obj)
        {
            JavaScriptSerializer serializer = new JavaScriptSerializer();
            return serializer.Serialize(obj);
        }
        public static string ToJSON(this object obj, int recursionDepth)
        {
            JavaScriptSerializer serializer = new JavaScriptSerializer
            {
                RecursionLimit = recursionDepth
            };
            return serializer.Serialize(obj);
        }
        public static string ImageToBase64(HttpPostedFileBase image)
        {
            var fileContent = image;
            string base64 = null;
            if (fileContent != null && fileContent.ContentLength > 0)
            {
                //Obtengo el stream
                var stream = fileContent.InputStream;
                //Genero un array de bytes
                byte[] fileData = null;
                using (var binaryReader = new BinaryReader(stream))
                {
                    fileData = binaryReader.ReadBytes(fileContent.ContentLength);
                }
                //Realizo la convercion a base 64
                return base64 = Convert.ToBase64String(fileData);
            }
            else
                return string.Empty;
        }
        public static string SetDefaultImage()
        {
            string image = "";
            return image;
        }
        public static string SinImagen()
        {
            string imagen = "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";
                return imagen;
        }
        public static string SqlReaderToJson(SqlDataReader rdr)
        {
            StringBuilder sb = new StringBuilder();
            StringWriter sw = new StringWriter(sb);

            using (JsonWriter jsonWriter = new JsonTextWriter(sw))
            {
                jsonWriter.WriteStartArray();

                while (rdr.Read())
                {
                    jsonWriter.WriteStartObject();

                    int fields = rdr.FieldCount;

                    for (int i = 0; i < fields; i++)
                    {
                        jsonWriter.WritePropertyName(rdr.GetName(i));
                        jsonWriter.WriteValue(rdr[i]);
                    }

                    jsonWriter.WriteEndObject();
                }

                jsonWriter.WriteEndArray();

                return sw.ToString();
            }
        }
        public static string ObtenerExtensionImagenBase64(string imagen64)
        {
            string extension = string.Empty;
            int position = 0;

            position = imagen64.IndexOf("iVBOR");
            if (position == 0)
                return extension = "image/png";

            position = imagen64.IndexOf("/9j/4");
            if (position == 0)
                return extension = "image/jpeg";

            //bmp de 256 colores
            position = imagen64.IndexOf("Qk3");
            if (position == 0)
                return extension = "image/bmp";

            //bmp de monocromatico colores
            position = imagen64.IndexOf("Qk2");
            if (position == 0)
                return extension = "image/bmp";

            //bmp de 16 colores
            position = imagen64.IndexOf("Qk1");
            if (position == 0)
                return extension = "image/bmp";

            return extension;
        }
        public static IEnumerable<ErrorModelState> AllErrors(this ModelStateDictionary modelState)
        {
            var result = from ms in modelState
                         where ms.Value.Errors.Any()
                         let fieldKey = ms.Key
                         let errors = ms.Value.Errors
                         from error in errors
                         select new ErrorModelState(fieldKey, error.ErrorMessage);

            return result;
        }
        public static Image ImageBase64ToImage(string imageBase64)
        {
            byte[] bytes = Convert.FromBase64String(imageBase64);

            Image image;
            using (MemoryStream ms = new MemoryStream(bytes))
            {
                image = Image.FromStream(ms);
            }

            return image;
        }

        public static string NumeroALetras(this decimal numberAsString)
        {
            string dec;

            var entero = Convert.ToInt64(Math.Truncate(numberAsString));
            var decimales = Convert.ToInt32(Math.Round((numberAsString - entero) * 100, 2));
            if (decimales > 0)
            {
                //dec = " PESOS CON " + decimales.ToString() + "/100";
                dec = $" PESOS {decimales:0,0} /100";
            }
            //Código agregado por mí
            else
            {
                //dec = " PESOS CON " + decimales.ToString() + "/100";
                dec = $" PESOS {decimales:0,0} /100";
            }
            var res = NumeroALetras(Convert.ToDouble(entero)) + dec;
            return res;
        }
        [SuppressMessage("ReSharper", "CompareOfFloatsByEqualityOperator")]
        private static string NumeroALetras(double value)
        {
            string num2Text; value = Math.Truncate(value);
            if (value == 0) num2Text = "CERO";
            else if (value == 1) num2Text = "UNO";
            else if (value == 2) num2Text = "DOS";
            else if (value == 3) num2Text = "TRES";
            else if (value == 4) num2Text = "CUATRO";
            else if (value == 5) num2Text = "CINCO";
            else if (value == 6) num2Text = "SEIS";
            else if (value == 7) num2Text = "SIETE";
            else if (value == 8) num2Text = "OCHO";
            else if (value == 9) num2Text = "NUEVE";
            else if (value == 10) num2Text = "DIEZ";
            else if (value == 11) num2Text = "ONCE";
            else if (value == 12) num2Text = "DOCE";
            else if (value == 13) num2Text = "TRECE";
            else if (value == 14) num2Text = "CATORCE";
            else if (value == 15) num2Text = "QUINCE";
            else if (value < 20) num2Text = "DIECI" + NumeroALetras(value - 10);
            else if (value == 20) num2Text = "VEINTE";
            else if (value < 30) num2Text = "VEINTI" + NumeroALetras(value - 20);
            else if (value == 30) num2Text = "TREINTA";
            else if (value == 40) num2Text = "CUARENTA";
            else if (value == 50) num2Text = "CINCUENTA";
            else if (value == 60) num2Text = "SESENTA";
            else if (value == 70) num2Text = "SETENTA";
            else if (value == 80) num2Text = "OCHENTA";
            else if (value == 90) num2Text = "NOVENTA";
            else if (value < 100) num2Text = NumeroALetras(Math.Truncate(value / 10) * 10) + " Y " + NumeroALetras(value % 10);
            else if (value == 100) num2Text = "CIEN";
            else if (value < 200) num2Text = "CIENTO " + NumeroALetras(value - 100);
            else if ((value == 200) || (value == 300) || (value == 400) || (value == 600) || (value == 800)) num2Text = NumeroALetras(Math.Truncate(value / 100)) + "CIENTOS";
            else if (value == 500) num2Text = "QUINIENTOS";
            else if (value == 700) num2Text = "SETECIENTOS";
            else if (value == 900) num2Text = "NOVECIENTOS";
            else if (value < 1000) num2Text = NumeroALetras(Math.Truncate(value / 100) * 100) + " " + NumeroALetras(value % 100);
            else if (value == 1000) num2Text = "MIL";
            else if (value < 2000) num2Text = "MIL " + NumeroALetras(value % 1000);
            else if (value < 1000000)
            {
                num2Text = NumeroALetras(Math.Truncate(value / 1000)) + " MIL";
                if ((value % 1000) > 0)
                {
                    num2Text = num2Text + " " + NumeroALetras(value % 1000);
                }
            }
            else if (value == 1000000)
            {
                num2Text = "UN MILLON";
            }
            else if (value < 2000000)
            {
                num2Text = "UN MILLON " + NumeroALetras(value % 1000000);
            }
            else if (value < 1000000000000)
            {
                num2Text = NumeroALetras(Math.Truncate(value / 1000000)) + " MILLONES ";
                if ((value - Math.Truncate(value / 1000000) * 1000000) > 0)
                {
                    num2Text = num2Text + " " + NumeroALetras(value - Math.Truncate(value / 1000000) * 1000000);
                }
            }
            else if (value == 1000000000000) num2Text = "UN BILLON";
            else if (value < 2000000000000) num2Text = "UN BILLON " + NumeroALetras(value - Math.Truncate(value / 1000000000000) * 1000000000000);
            else
            {
                num2Text = NumeroALetras(Math.Truncate(value / 1000000000000)) + " BILLONES";
                if ((value - Math.Truncate(value / 1000000000000) * 1000000000000) > 0)
                {
                    num2Text = num2Text + " " + NumeroALetras(value - Math.Truncate(value / 1000000000000) * 1000000000000);
                }
            }
            return num2Text;
        }
    }
}
